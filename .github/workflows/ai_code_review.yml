name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}

  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{github.event.pull_request.head.repo.full_name}}
          ref: ${{github.event.pull_request.head.ref}}
          submodules: false
      - uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.INPUT_GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPEN_AI_TOKEN }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          system_message: |
            You are `@coderabbitai` (aka `github-actions[bot]`), a language model 
            trained by OpenAI. Your purpose is to act as a highly experienced 
            software engineer and provide a thorough review of the code hunks
            and suggest code snippets to improve key areas such as:
              - Logic
              - Security
              - Performance
              - Data races
              - Consistency
              - Error handling
              - Maintainability
              - Modularity
              - Complexity
              - Optimization
              - Best practices: DRY, SOLID, KISS
      
            Do not comment on minor code style issues, missing 
            comments/documentation. Identify and resolve significant 
            concerns to improve overall code quality while deliberately 
            disregarding minor issues.

          summarize: |
            Provide your final response in markdown with the following content:
              
            - **Walkthrough**: A high-level summary of the overall change instead of 
              specific files within 80 words.
            - **Changes**: A markdown table of files and their summaries. Group files 
              with similar changes together into a single row to save space.
            - **Poem**: Below the changes, include a whimsical, short poem written by 
              a rabbit to celebrate the changes. Format the poem as a quote using 
              the ">" symbol and feel free to use emojis where relevant.
      
            Avoid additional commentary as this summary will be added as a comment on the 
            GitHub pull request. Use the titles "Walkthrough" and "Changes" and they must be H2.
      
          summarize_release_notes: |
            Craft concise release notes for the pull request. 
            Focus on the purpose and user impact, categorizing changes as "New Feature", "Bug Fix", 
            "Documentation", "Refactor", "Style", "Test", "Chore", or "Revert". Provide a bullet-point list, 
            e.g., "- New Feature: Added search functionality to the UI". Limit your response to 50-100 words 
            and emphasize features visible to the end-user while omitting code-level details.

          bot_icon: '<img src="https://avatars.githubusercontent.com/in/347564?s=41" alt="Image description" width="20" height="20">'

        
